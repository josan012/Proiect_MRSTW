@model handmadeShop.Web.Models.DiscountViewModel

@{
    ViewBag.Title = "Set Discount";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["RenderNavbar"] = true;
}

<link rel="stylesheet" type="text/css" href="~/Content/custom-form.css">

<div class="container" style="margin-top:150px">
    <div class="form-container">
        <h2>Set Discount</h2>

        @using (Html.BeginForm("SetDiscount", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpirationTime, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.ExpirationTime, GetExpirationTimes(), "Select Expiration Time", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpirationTime, "", new { @class = "text-danger" })
            </div>



            <button type="submit" class="btn btn-primary">Save</button>


        }
        @using (Html.BeginForm("DeleteDiscount", "Account", FormMethod.Post, new { id = "deleteDiscountForm" }))
        {
            <button type="submit" class="btn btn-danger" style="margin-bottom: 15px; margin-top:15px;width: 100%; border: none; border-radius: 5px;" onclick="confirmDelete()">Remove Discount</button>
         
        }

    </div>

</div>





@functions {

    public List<SelectListItem> GetExpirationTimes()
    {
        List<SelectListItem> expirationTimes = new List<SelectListItem>();

        DateTime currentTime = DateTime.Now;
        DateTime maxTime = currentTime.AddHours(24);


        while (currentTime < maxTime)
        {
            expirationTimes.Add(new SelectListItem { Text = currentTime.ToString(), Value = currentTime.ToString("yyyy-MM-dd HH:mm:ss") });
            currentTime = currentTime.AddHours(1);
        }

        return expirationTimes;
    }
}

<script>

    function confirmDelete() {
        if (confirm("Are you sure you want to remove the discount?")) {
            document.getElementById("deleteDiscountForm").submit();
        }
    }

</script>
